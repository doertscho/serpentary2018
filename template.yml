AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description:
      AWS CodeStar projectID used to associate new resources to team members
  CognitoUserPoolId:
    Type: String
    Description: ARN of the user pool to be used for authorized requests
  DbTablePrefix:
    Type: String
    Description: Prefix to be used for all database tables

Resources:
  # Database tables
  TournamentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Join ['', [!Ref 'DbTablePrefix', 'tournaments']]
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "N"
        -
          AttributeName: "updated"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
  MatchDaysTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Join ['', [!Ref 'DbTablePrefix', 'match-days']]
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "N"
        -
          AttributeName: "updated"
          AttributeType: "N"
        -
          AttributeName: "tournament_id"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
  MatchesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Join ['', [!Ref 'DbTablePrefix', 'matches']]
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "N"
        -
          AttributeName: "updated"
          AttributeType: "N"
        -
          AttributeName: "match_day_id"
          AttributeType: "N"
        -
          AttributeName: "home_team_id"
          AttributeType: "N"
        -
          AttributeName: "away_team_id"
          AttributeType: "N"
        -
          AttributeName: "stadium_id"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
  # Authorizer for the API Gateway
  CognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Type: COGNITO_USER_POOLS
      Name: CognitoAuthorizer
      IdentitySource: method.request.header.Authorization
      ProviderARNs: [!Ref 'CognitoUserPoolId']
      RestApiId: !Ref 'ServerlessRestApi'
  # Backend Lambdas
  DataProvider:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/dist/get_data
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetTournaments:
          Type: Api
          Properties:
            Path: /tournaments
            Method: get
        GetTournamentById:
          Type: Api
          Properties:
            Path: /tournaments/{tournamentId}
            Method: get
        GetMatchDayById:
          Type: Api
          Properties:
            Path: /match-days/{matchDayId}
            Method: get
        GetBetsByMatchDayIdAndSquad:
          Type: Api
          Properties:
            Path: /match-days/{matchDayId}/bets/{squadName}
            Method: get
  SessionManager:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/dist/get_session
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        MeOptions:
          Type: Api
          Properties:
            Path: /me
            Method: options
        GetMe:
          Type: Api
          Properties:
            Path: /me
            Method: get
