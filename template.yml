AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description:
      AWS CodeStar projectID used to associate new resources to team members
  CognitoUserPoolId:
    Type: String
    Description: ARN of the user pool to be used for authorized requests

Resources:
  CognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Type: COGNITO_USER_POOLS
      Name: CognitoAuthorizer
      IdentitySource: Authorization
      ProviderARNs: [!Ref 'CognitoUserPoolId']
      RestApiId: !Ref 'ServerlessRestApi'
  DataProvider:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/dist/get_data
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetTournaments:
          Type: Api
          Properties:
            Path: /tournaments
            Method: get
        GetTournamentById:
          Type: Api
          Properties:
            Path: /tournaments/{tournamentId}
            Method: get
        GetMatchDayById:
          Type: Api
          Properties:
            Path: /match-days/{matchDayId}
            Method: get
        GetBetsByMatchDayIdAndSquad:
          Type: Api
          Properties:
            Path: /match-days/{matchDayId}/bets/{squadName}
            Method: get
  SessionManager:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambdas/dist/get_session
      Runtime: go1.x
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetMyId:
          Type: Api
          Properties:
            Path: /my/id
            Method: get
        GetMyIdOptions:
          Type: Api
          Properties:
            Path: /my/id
            Method: options
